// Environment code for project intelligentRestaurant.mas2j
import jason.asSyntax.*;
import jason.environment.*;
import jason.asSyntax.parser.*;
import java.util.logging.*;
import jason.environment.grid.Location;


public class RestaurantEnv extends Environment {


	 public static final Literal at = Literal.parseLiteral("at(robot1,table1)");
	  public static final Literal am = Literal.parseLiteral("at(robot1,manager)");
	
	private Logger logger = Logger.getLogger("intelligentRestaurant.mas2j."+RestaurantEnv.class.getName());

    RestaurantModel model;  //model of the grid

    @Override
    public void init(String[] args) {
        model = new RestaurantModel();

        if (args.length == 1 && args[0].equals("gui")) {
            RestaurantView view  = new RestaurantView(model);
            model.setView(view);
        }
        updatePercepts();
    }

    void updatePercepts(){
        clearPercepts("robot1");
		
		// get the robot location
        Location lRobot1 = model.getAgPos(0);
		
		 // add agent location to its percepts
        if (lRobot1.equals(model.lTable1)) {
            addPercept("robot1", at);
        }
		  if (lRobot1.equals(model.getAgPos(2))) {
            addPercept("robot1", am);
        }
		
    }

    @Override
    public boolean executeAction(String agName, Structure action) {
        logger.info("executing: "+action+", but not implemented!");
        boolean result=false;
		if(action.getFunctor().equals("move_towards")){
			try{
				result=model.moveTowards(model.lTable1,0);
			} catch (Exception e){
				e.printStackTrace();
			}
		}
		
		   if (result) {
            updatePercepts();
            try {
                Thread.sleep(100);
            } catch (Exception e) {}
        }
		return result;

    }



    /** Called before the end of MAS execution

    @Override
    public void stop() {
        super.stop();
    }  */

}



